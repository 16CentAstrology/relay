==================================== INPUT ====================================
fragment ActorUserFragment on User {
  name
  profilePicture {
    uri
    width
    height
  }
}

fragment ActorFragment on Actor {
  ...ActorUserFragment @alias
}

query Viewer {
  viewer {
    actor @fb_actor_change {
      ...ActorFragment
    }
  }
}
==================================== OUTPUT ===================================
import type { ActorChangePoint } from "react-relay/multi-actor";
import type { ActorFragment$fragmentType } from "ActorFragment.graphql";
export type Viewer$variables = {||};
export type Viewer$data = {|
  +viewer: ?{|
    +actor: ?ActorChangePoint<{|
      +actor_key: string,
      +$fragmentSpreads: ActorFragment$fragmentType,
    |}>,
  |},
|};
export type Viewer = {|
  response: Viewer$data,
  variables: Viewer$variables,
|};
-------------------------------------------------------------------------------
import type { ActorUserFragment$fragmentType } from "ActorUserFragment.graphql";
import type { FragmentType } from "relay-runtime";
declare export opaque type ActorFragment$fragmentType: FragmentType;
export type ActorFragment$data = {|
  +ActorUserFragment: ?{|
    +$fragmentSpreads: ActorUserFragment$fragmentType,
  |},
  +$fragmentType: ActorFragment$fragmentType,
|};
export type ActorFragment$key = {
  +$data?: ActorFragment$data,
  +$fragmentSpreads: ActorFragment$fragmentType,
  ...
};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type ActorUserFragment$fragmentType: FragmentType;
export type ActorUserFragment$data = {|
  +name: ?string,
  +profilePicture: ?{|
    +height: ?number,
    +uri: ?string,
    +width: ?number,
  |},
  +$fragmentType: ActorUserFragment$fragmentType,
|};
export type ActorUserFragment$key = {
  +$data?: ActorUserFragment$data,
  +$fragmentSpreads: ActorUserFragment$fragmentType,
  ...
};
