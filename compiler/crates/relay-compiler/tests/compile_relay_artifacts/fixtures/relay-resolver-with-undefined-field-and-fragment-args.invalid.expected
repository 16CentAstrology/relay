==================================== INPUT ====================================
# expected-to-throw

query relayResolverWithUndefinedFieldAndFragmentArgsQuery {
  node(id: "SOME_ID") {
    ...relayResolverWithUndefinedFieldAndFragmentArgs_user @alias
  }
}

fragment relayResolverWithUndefinedFieldAndFragmentArgs_user on User {
  pop_star_name(
    field_arg: $undefined_field_arg
    includeName: $undefined_fragment_arg
  )
}

fragment relayResolverWithUndefinedFieldAndFragmentArgsFragment_name on User
@argumentDefinitions(includeName: {type: "Boolean!"}) {
  __typename
  name @include(if: $includeName)
}

# %extensions%

extend type User {
  pop_star_name(field_arg: Int, includeName: Boolean!): String
    @relay_resolver(
      fragment_name: "relayResolverWithUndefinedFieldAndFragmentArgsFragment_name"
      import_path: "PopStarNameResolver"
    )
}
==================================== ERROR ====================================
✖︎ Operation 'relayResolverWithUndefinedFieldAndFragmentArgsQuery' references undefined variables: '$undefined_field_arg', '$undefined_fragment_arg'.

  relay-resolver-with-undefined-field-and-fragment-args.invalid.graphql:11:16
   10 │   pop_star_name(
   11 │     field_arg: $undefined_field_arg
      │                ^^^^^^^^^^^^^^^^^^^^
   12 │     includeName: $undefined_fragment_arg

  ℹ︎ related location

  relay-resolver-with-undefined-field-and-fragment-args.invalid.graphql:12:18
   11 │     field_arg: $undefined_field_arg
   12 │     includeName: $undefined_fragment_arg
      │                  ^^^^^^^^^^^^^^^^^^^^^^^
   13 │   )
