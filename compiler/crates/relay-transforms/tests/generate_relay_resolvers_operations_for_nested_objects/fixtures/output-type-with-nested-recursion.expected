==================================== INPUT ====================================
# expected-to-throw

fragment Foo_user on User {
  todo {
    __typename
  }
}

# %extensions%

type Todo {
  id: ID!
  blocked_by: TodoDependencies
}

type TodoDependencies {
  dependencies: [Todo]!
  blocked_by: [TodoDependencies]!
}

extend type User {
  todo: [Todo] @relay_resolver(import_path: "TodoResolver", is_output_type: true)
}
==================================== ERROR ====================================
✖︎ @RelayResolver type recursion detected for the output type `TodoDependencies`. This is not supported for `@outputType` resolvers. If you want to model a connection between two entities of the same GraphQL type, consider creating a new Relay Resolver with `@edgeTo` annotation.

  output-type-with-nested-recursion.graphql:12:1
   10 │ 
   11 │ type Todo {
   12 │   id: ID!
      │ ^^^^^^^^^
   13 │   blocked_by: TodoDependencies


✖︎ @RelayResolver type recursion detected for the output type `Todo`. This is not supported for `@outputType` resolvers. If you want to model a connection between two entities of the same GraphQL type, consider creating a new Relay Resolver with `@edgeTo` annotation.

  output-type-with-nested-recursion.graphql:9:5
    8 │ 
    9 │ # %extensions%
      │     ^^^^^^^^^^
   10 │ 
   11 │ type Todo {
